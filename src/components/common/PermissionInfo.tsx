import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  Modal,
  TouchableOpacity,
  ScrollView,
} from 'react-native';

interface PermissionInfoProps {
  visible: boolean;
  onClose: () => void;
}

const PermissionInfo: React.FC<PermissionInfoProps> = ({ visible, onClose }) => {
  return (
    <Modal
      visible={visible}
      transparent={true}
      animationType="slide"
      onRequestClose={onClose}
    >
      <View style={styles.overlay}>
        <View style={styles.container}>
          <View style={styles.header}>
            <Text style={styles.title}>üîê Quy·ªÅn truy c·∫≠p ·ª©ng d·ª•ng</Text>
            <TouchableOpacity style={styles.closeButton} onPress={onClose}>
              <Text style={styles.closeButtonText}>‚úï</Text>
            </TouchableOpacity>
          </View>

          <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>üì≥ VIBRATE Permission</Text>
              <Text style={styles.description}>
                ·ª®ng d·ª•ng y√™u c·∫ßu quy·ªÅn rung (VIBRATE) ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng haptic feedback 
                khi b·∫°n ch∆°i game.
              </Text>
              
              <View style={styles.usageList}>
                <Text style={styles.usageTitle}>ƒê∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ:</Text>
                <Text style={styles.usageItem}>‚Ä¢ Rung nh·∫π khi l·∫≠t th·∫ª</Text>
                <Text style={styles.usageItem}>‚Ä¢ Rung th√†nh c√¥ng khi t√¨m ƒë∆∞·ª£c c·∫∑p th·∫ª</Text>
                <Text style={styles.usageItem}>‚Ä¢ Rung l·ªói khi kh√¥ng t√¨m ƒë∆∞·ª£c c·∫∑p</Text>
                <Text style={styles.usageItem}>‚Ä¢ Rung ƒÉn m·ª´ng khi ho√†n th√†nh game</Text>
                <Text style={styles.usageItem}>‚Ä¢ Rung x√°c nh·∫≠n khi nh·∫•n n√∫t</Text>
              </View>

              <View style={styles.noteBox}>
                <Text style={styles.noteTitle}>üìù L∆∞u √Ω:</Text>
                <Text style={styles.noteText}>
                  ‚Ä¢ B·∫°n c√≥ th·ªÉ t·∫Øt rung trong c√†i ƒë·∫∑t thi·∫øt b·ªã{'\n'}‚Ä¢ Quy·ªÅn n√†y kh√¥ng thu th·∫≠p d·ªØ li·ªáu c√° nh√¢n{'\n'}‚Ä¢ Ch·ªâ t·∫°o hi·ªáu ·ª©ng rung, kh√¥ng truy c·∫≠p th√¥ng tin kh√°c
                </Text>
              </View>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>üîí Quy·ªÅn ri√™ng t∆∞</Text>
              <Text style={styles.description}>
                ·ª®ng d·ª•ng Memory Match cam k·∫øt b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ c·ªßa b·∫°n:
              </Text>
              
              <View style={styles.privacyList}>
                <Text style={styles.privacyItem}>‚úÖ Kh√¥ng thu th·∫≠p th√¥ng tin c√° nh√¢n</Text>
                <Text style={styles.privacyItem}>‚úÖ Kh√¥ng k·∫øt n·ªëi internet</Text>
                <Text style={styles.privacyItem}>‚úÖ Kh√¥ng theo d√µi h√†nh vi ng∆∞·ªùi d√πng</Text>
                <Text style={styles.privacyItem}>‚úÖ Kh√¥ng chia s·∫ª d·ªØ li·ªáu v·ªõi b√™n th·ª© ba</Text>
                <Text style={styles.privacyItem}>‚úÖ D·ªØ li·ªáu game ch·ªâ l∆∞u tr√™n thi·∫øt b·ªã</Text>
              </View>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>‚öôÔ∏è C√†i ƒë·∫∑t</Text>
              <Text style={styles.description}>
                ƒê·ªÉ qu·∫£n l√Ω quy·ªÅn rung:
              </Text>
              
              <View style={styles.settingsList}>
                <Text style={styles.settingsItem}>
                  1. V√†o C√†i ƒë·∫∑t ‚Üí ·ª®ng d·ª•ng ‚Üí Memory Match
                </Text>
                <Text style={styles.settingsItem}>
                  2. Ch·ªçn "Quy·ªÅn" ho·∫∑c "Permissions"
                </Text>
                <Text style={styles.settingsItem}>
                  3. B·∫≠t/t·∫Øt quy·ªÅn "Rung" theo √Ω mu·ªën
                </Text>
              </View>
            </View>
          </ScrollView>

          <TouchableOpacity style={styles.okButton} onPress={onClose}>
            <Text style={styles.okButtonText}>ƒê√£ hi·ªÉu</Text>
          </TouchableOpacity>
        </View>
      </View>
    </Modal>
  );
};

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  container: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    width: '100%',
    maxHeight: '80%',
    elevation: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 5 },
    shadowOpacity: 0.3,
    shadowRadius: 10,
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#E2E8F0',
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#2D3748',
    flex: 1,
  },
  closeButton: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#F7FAFC',
    justifyContent: 'center',
    alignItems: 'center',
  },
  closeButtonText: {
    fontSize: 16,
    color: '#4A5568',
    fontWeight: 'bold',
  },
  content: {
    maxHeight: 400,
  },
  section: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F7FAFC',
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#2D3748',
    marginBottom: 12,
  },
  description: {
    fontSize: 14,
    lineHeight: 20,
    color: '#4A5568',
    marginBottom: 16,
  },
  usageList: {
    marginBottom: 16,
  },
  usageTitle: {
    fontSize: 14,
    fontWeight: '600',
    color: '#2D3748',
    marginBottom: 8,
  },
  usageItem: {
    fontSize: 14,
    lineHeight: 20,
    color: '#4A5568',
    marginBottom: 4,
  },
  noteBox: {
    backgroundColor: '#FFF5F5',
    borderRadius: 8,
    padding: 12,
    borderLeftWidth: 4,
    borderLeftColor: '#F56565',
  },
  noteTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#C53030',
    marginBottom: 4,
  },
  noteText: {
    fontSize: 13,
    lineHeight: 18,
    color: '#742A2A',
  },
  privacyList: {
    gap: 6,
  },
  privacyItem: {
    fontSize: 14,
    lineHeight: 20,
    color: '#38A169',
    fontWeight: '500',
  },
  settingsList: {
    gap: 8,
  },
  settingsItem: {
    fontSize: 14,
    lineHeight: 20,
    color: '#4A5568',
  },
  okButton: {
    backgroundColor: '#4299E1',
    paddingVertical: 16,
    paddingHorizontal: 32,
    borderRadius: 12,
    margin: 20,
    alignItems: 'center',
  },
  okButtonText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
});

export default PermissionInfo;
