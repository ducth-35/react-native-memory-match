import React from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Alert,
  Platform,
  ScrollView,
} from 'react-native';
import { HapticFeedback, GameFeedback } from '../../utils/feedbackUtils';

const AndroidHapticTest: React.FC = () => {
  const testHaptic = (type: string, hapticFunction: () => void) => {
    console.log(`üîä Testing ${type} haptic feedback`);
    hapticFunction();
    
    Alert.alert(
      'üì≥ Haptic Test',
      `ƒê√£ test ${type} haptic feedback.\n\nPlatform: ${Platform.OS}\nB·∫°n c√≥ c·∫£m nh·∫≠n ƒë∆∞·ª£c rung kh√¥ng?`,
      [
        { text: 'C√≥ ‚úÖ', style: 'default' },
        { text: 'Kh√¥ng ‚ùå', style: 'destructive' },
        { text: 'ƒê√≥ng', style: 'cancel' },
      ]
    );
  };

  const testGameSequence = () => {
    console.log('üéÆ Testing game sequence');
    
    // Simulate card flip sequence
    GameFeedback.cardFlip();
    setTimeout(() => GameFeedback.cardFlip(), 500);
    setTimeout(() => GameFeedback.cardMatch(), 1000);
    
    Alert.alert(
      'üéÆ Game Sequence Test',
      'ƒê√£ test sequence: Card Flip ‚Üí Card Flip ‚Üí Match\n\nB·∫°n c√≥ c·∫£m nh·∫≠n ƒë∆∞·ª£c 3 l·∫ßn rung kh√°c nhau kh√¥ng?',
      [
        { text: 'C√≥ ‚úÖ', style: 'default' },
        { text: 'Kh√¥ng ‚ùå', style: 'destructive' },
      ]
    );
  };

  const testNoMatchSequence = () => {
    console.log('‚ùå Testing no match sequence');
    
    // Simulate no match sequence
    GameFeedback.cardFlip();
    setTimeout(() => GameFeedback.cardFlip(), 500);
    setTimeout(() => GameFeedback.cardNoMatch(), 1000);
    
    Alert.alert(
      '‚ùå No Match Sequence Test',
      'ƒê√£ test sequence: Card Flip ‚Üí Card Flip ‚Üí No Match\n\nB·∫°n c√≥ c·∫£m nh·∫≠n ƒë∆∞·ª£c pattern rung l·ªói kh√¥ng?',
      [
        { text: 'C√≥ ‚úÖ', style: 'default' },
        { text: 'Kh√¥ng ‚ùå', style: 'destructive' },
      ]
    );
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>üì≥ Android Haptic Test</Text>
      
      <Text style={styles.subtitle}>
        Platform: {Platform.OS} {Platform.Version}
      </Text>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üîß Basic Haptic Tests</Text>
        
        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#4ECDC4' }]}
          onPress={() => testHaptic('Light (50ms)', HapticFeedback.light)}
        >
          <Text style={styles.buttonText}>Light Haptic</Text>
          <Text style={styles.buttonSubtext}>Rung nh·∫π 50ms</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#45B7D1' }]}
          onPress={() => testHaptic('Medium (100ms)', HapticFeedback.medium)}
        >
          <Text style={styles.buttonText}>Medium Haptic</Text>
          <Text style={styles.buttonSubtext}>Rung trung b√¨nh 100ms</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#96CEB4' }]}
          onPress={() => testHaptic('Heavy (200ms)', HapticFeedback.heavy)}
        >
          <Text style={styles.buttonText}>Heavy Haptic</Text>
          <Text style={styles.buttonSubtext}>Rung m·∫°nh 200ms</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#FFEAA7' }]}
          onPress={() => testHaptic('Success Pattern', HapticFeedback.success)}
        >
          <Text style={styles.buttonText}>Success Haptic</Text>
          <Text style={styles.buttonSubtext}>Pattern: 100ms-50ms-100ms</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#DDA0DD' }]}
          onPress={() => testHaptic('Error Pattern', HapticFeedback.error)}
        >
          <Text style={styles.buttonText}>Error Haptic</Text>
          <Text style={styles.buttonSubtext}>Pattern: 150ms-100ms-150ms-100ms-150ms</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#98D8C8' }]}
          onPress={() => testHaptic('Celebration Pattern', HapticFeedback.celebration)}
        >
          <Text style={styles.buttonText}>Celebration Haptic</Text>
          <Text style={styles.buttonSubtext}>Pattern: 200ms-100ms-200ms-100ms-200ms-100ms-400ms</Text>
        </TouchableOpacity>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üéÆ Game Feedback Tests</Text>
        
        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#FF6B6B' }]}
          onPress={() => testHaptic('Card Flip', GameFeedback.cardFlip)}
        >
          <Text style={styles.buttonText}>Card Flip</Text>
          <Text style={styles.buttonSubtext}>Khi l·∫≠t th·∫ª</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#4ECDC4' }]}
          onPress={() => testHaptic('Card Match', GameFeedback.cardMatch)}
        >
          <Text style={styles.buttonText}>Card Match</Text>
          <Text style={styles.buttonSubtext}>Khi match th√†nh c√¥ng</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#45B7D1' }]}
          onPress={() => testHaptic('No Match', GameFeedback.cardNoMatch)}
        >
          <Text style={styles.buttonText}>No Match</Text>
          <Text style={styles.buttonSubtext}>Khi kh√¥ng match</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#96CEB4' }]}
          onPress={() => testHaptic('Game Complete', GameFeedback.gameComplete)}
        >
          <Text style={styles.buttonText}>Game Complete</Text>
          <Text style={styles.buttonSubtext}>Khi ho√†n th√†nh game</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.button, { backgroundColor: '#FFEAA7' }]}
          onPress={() => testHaptic('Button Press', GameFeedback.buttonPress)}
        >
          <Text style={styles.buttonText}>Button Press</Text>
          <Text style={styles.buttonSubtext}>Khi nh·∫•n n√∫t</Text>
        </TouchableOpacity>
      </View>

      <View style={styles.section}>
        <Text style={styles.sectionTitle}>üîÑ Sequence Tests</Text>
        
        <TouchableOpacity
          style={[styles.sequenceButton, { backgroundColor: '#FF6B6B' }]}
          onPress={testGameSequence}
        >
          <Text style={styles.sequenceButtonText}>üéØ Test Match Sequence</Text>
          <Text style={styles.sequenceButtonSubtext}>Flip ‚Üí Flip ‚Üí Match (3 rung kh√°c nhau)</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={[styles.sequenceButton, { backgroundColor: '#4ECDC4' }]}
          onPress={testNoMatchSequence}
        >
          <Text style={styles.sequenceButtonText}>‚ùå Test No Match Sequence</Text>
          <Text style={styles.sequenceButtonSubtext}>Flip ‚Üí Flip ‚Üí No Match</Text>
        </TouchableOpacity>
      </View>

      <View style={styles.infoBox}>
        <Text style={styles.infoTitle}>‚ÑπÔ∏è L∆∞u √Ω cho Android:</Text>
        <Text style={styles.infoText}>
          ‚Ä¢ ƒê·∫£m b·∫£o device kh√¥ng ·ªü ch·∫ø ƒë·ªô im l·∫∑ng{'\n'}‚Ä¢ Ki·ªÉm tra Settings ‚Üí Sound ‚Üí Vibrate = ON{'\n'}‚Ä¢ App ƒë√£ c√≥ permission VIBRATE{'\n'}‚Ä¢ M·ªôt s·ªë device c√≥ th·ªÉ t·∫Øt vibration khi pin y·∫øu{'\n'}‚Ä¢ Check console logs ƒë·ªÉ debug
        </Text>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
    padding: 16,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 8,
    color: '#333',
  },
  subtitle: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 20,
    color: '#666',
  },
  section: {
    backgroundColor: 'white',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 12,
    color: '#333',
  },
  button: {
    padding: 16,
    borderRadius: 12,
    alignItems: 'center',
    marginBottom: 12,
    elevation: 3,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
  },
  buttonText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'white',
    marginBottom: 4,
  },
  buttonSubtext: {
    fontSize: 12,
    color: 'rgba(255, 255, 255, 0.9)',
    textAlign: 'center',
  },
  sequenceButton: {
    padding: 20,
    borderRadius: 12,
    alignItems: 'center',
    marginBottom: 12,
    elevation: 3,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
  },
  sequenceButtonText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: 'white',
    marginBottom: 4,
  },
  sequenceButtonSubtext: {
    fontSize: 14,
    color: 'rgba(255, 255, 255, 0.9)',
    textAlign: 'center',
  },
  infoBox: {
    backgroundColor: '#E8F5E8',
    borderRadius: 12,
    padding: 16,
    marginBottom: 20,
    borderLeftWidth: 4,
    borderLeftColor: '#4CAF50',
  },
  infoTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#2E7D32',
    marginBottom: 8,
  },
  infoText: {
    fontSize: 14,
    color: '#424242',
    lineHeight: 20,
  },
});

export default AndroidHapticTest;
